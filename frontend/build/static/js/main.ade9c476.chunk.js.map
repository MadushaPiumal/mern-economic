{"version":3,"sources":["constants/userConstants.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Loader.js","components/Message.js","components/FormContainer.js","screens/LoginScreen.js","constants/centreConstants.js","actions/centreActions.js","screens/HomeScreen.js","screens/CentreEditScreen.js","constants/itemConstants.js","actions/itemActions.js","screens/ItemsScreen.js","screens/ItemEditScreen.js","screens/UserScreen.js","screens/UserEditScreen.js","constants/priceConstants.js","screens/PriceScreen.js","actions/priceAction.js","screens/AboutUsScreen.js","screens/ProductScreen.js","screens/AdminScreen.js","App.js","reportWebVitals.js","store.js","reducer/centerReducers.js","reducer/itemReducers.js","reducer/userReducers.js","reducer/priceReducers.js","index.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","getUserDetails","id","dispatch","getState","a","type","userInfo","userLogin","config","headers","Authorization","token","axios","get","data","payload","response","message","updateUserProfile","user","put","Header","useDispatch","useSelector","state","Navbar","collapseOnSelect","expand","bg","variant","Container","Brand","href","Toggle","Collapse","Nav","className","to","Link","isAdmin","NavDropdown","title","name","Item","onClick","localStorage","removeItem","Footer","Row","Col","Loader","Spinner","animation","role","style","width","height","margin","display","Message","children","Alert","defaultProps","FormContainer","xs","md","LoginScreen","location","history","useState","email","setEmail","password","setPassword","loading","error","useEffect","push","Form","onSubmit","e","preventDefault","post","setItem","JSON","stringify","login","classnName","Group","controlId","Label","Control","placeholder","value","onChange","target","Button","CENTRE_LIST_REQUEST","CENTRE_LIST_SUCCESS","CENTRE_LIST_FAIL","CENTRE_DETAILS_REQUEST","CENTRE_DETAILS_SUCCESS","CENTRE_DETAILS_FAIL","CENTRE_REGISTER_REQUEST","CENTRE_REGISTER_SUCCESS","CENTRE_REGISTER_FAIL","CENTRE_DELETE_REQUEST","CENTRE_DELETE_SUCCESS","CENTRE_DELETE_FAIL","CENTRE_UPDATE_REQUEST","CENTRE_UPDATE_SUCCESS","CENTRE_UPDATE_FAIL","CENTRE_UPDATE_RESET","listCentres","getCertreDetails","HomeScreen","centreName","setCentreName","setMessage","centreList","centres","successDelete","centreDelete","success","deleteHandler","Authorizatio","delete","deleteCentre","centreRegister","Table","strriped","bordered","hover","responsive","map","centre","_id","CentreEditScreen","match","centreId","params","setId","Details","centreDetails","update","centreUpdate","loadingUpdate","errorUpdate","successUpdate","ITEM_LIST_REQUEST","ITEM_LIST_SUCCESS","ITEM_LIST_FAIL","ITEM_DETAILS_REQUEST","ITEM_DETAILS_SUCCESS","ITEM_DETAILS_FAIL","ITEM_REGISTER_REQUEST","ITEM_REGISTER_SUCCESS","ITEM_REGISTER_FAIL","ITEM_DELETE_REQUEST","ITEM_DELETE_SUCCESS","ITEM_DELETE_FAIL","ITEM_UPDATE_REQUEST","ITEM_UPDATE_SUCCESS","ITEM_UPDATE_FAIL","ITEM_UPDATE_RESET","listItems","getItemDetails","ItemsScreen","itemName","setItemName","itemList","items","itemDelete","deleteItem","itemRegister","item","ItemEditScreen","itemId","itemDetails","itemUpdate","UserScreen","setName","confirmPassword","setConfirmPassword","userList","users","userRegister","regLoading","regError","userDelete","deleteUser","register","as","UserEditScreen","userId","userName","setUserName","userDetails","userUpdateProfile","PRICE_LIST_REQUEST","PRICE_LIST_SUCCESS","PRICE_LIST_FAIL","PRICE_DETAILS_SUCCESS","PRICE_REGISTER_REQUEST","PRICE_REGISTER_SUCCESS","PRICE_REGISTER_FAIL","PRICE_DELETE_REQUEST","PRICE_DELETE_SUCCESS","PRICE_DELETE_FAIL","PRICE_UPDATE_REQUEST","PRICE_UPDATE_SUCCESS","PRICE_UPDATE_FAIL","PRICE_UPDATE_RESET","PriceScreen","price","setPrice","Date","date","dateTime","getUTCFullYear","getUTCMonth","getUTCDate","priceList","prices","priceRegister","AboutUsScreen","ProductScreen","AdminScreen","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","priceInfo","priceDelete","priceUpdate","initialState","getItem","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ade9c476.chunk.js","sourcesContent":["export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\"\r\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\"\r\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\"\r\nexport const USER_LOGOUT = \"USER_LOGOUT\"\r\n\r\nexport const USER_LIST_REQUEST = \"USER_LIST_REQUEST\"\r\nexport const USER_LIST_SUCCESS = \"USER_LIST_SUCCESS\"\r\nexport const USER_LIST_FAIL = \"USER_LIST_FAIL\"\r\n\r\nexport const USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST\"\r\nexport const USER_DETAILS_SUCCESS = \"USER_DETAILS_SUCCESS\"\r\nexport const USER_DETAILS_FAIL = \"USER_DETAILS_FAIL\"\r\n\r\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\"\r\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\"\r\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\"\r\n\r\nexport const USER_DELETE_REQUEST = \"USER_DELETE_REQUEST\";\r\nexport const USER_DELETE_SUCCESS = \"USER_DELETE_SUCCESS\";\r\nexport const USER_DELETE_FAIL = \"USER_DELETE_FAIL\";\r\n\r\nexport const USER_UPDATE_REQUEST = \"USER_UPDATE_REQUEST\"\r\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\"\r\nexport const USER_UPDATE_FAIL = \"USER_UPDATE_FAIL\"\r\nexport const USER_UPDATE_RESET = \"USER_UPDATE_RESET\"","import {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGOUT,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_REQUEST,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n} from \"../constants/userConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    });\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      \"/api/admin/users/login\",\r\n      { email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  dispatch({ type: USER_LOGOUT });\r\n};\r\n\r\nexport const listUsers = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_LIST_REQUEST });\r\n\r\n    const { data } = await axios.get(\"/api/admin/users\");\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.get(`/api/admin/users/${id}`, config);\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const register = (name, email, centreName, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    });\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      \"/api/admin/users\",\r\n      { name, email, centreName, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    //localStorage.setUser(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorizatio: `Bearer ${userInfo.token},`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/admin/users/${id}`, config);\r\n\r\n    dispatch({\r\n      type: USER_DELETE_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.put(`/api/admin/users/profile`, user, config);\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import { Container, Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logout } from \"../actions/userActions\";\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n  };\r\n  return (\r\n    <>\r\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n        <Container>\r\n          <Navbar.Brand href=\"#home\">EC SL</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"me-auto\"></Nav>\r\n\r\n            <Nav>\r\n              <LinkContainer to=\"/\">\r\n                <Nav.Link>Centres</Nav.Link>\r\n              </LinkContainer>\r\n              <LinkContainer to=\"/items\">\r\n                <Nav.Link>Items</Nav.Link>\r\n              </LinkContainer>\r\n              {userInfo.isAdmin && (\r\n                <LinkContainer to=\"/users\">\r\n                  <Nav.Link>Users</Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n              <LinkContainer to=\"/price\">\r\n                <Nav.Link>Price</Nav.Link>\r\n              </LinkContainer>\r\n              <LinkContainer to=\"/about\">\r\n                <Nav.Link>About Us</Nav.Link>\r\n              </LinkContainer>\r\n              <LinkContainer to=\"/contact\">\r\n                <Nav.Link>Contact Us</Nav.Link>\r\n              </LinkContainer>\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.name} id=\"username\">\r\n                  <LinkContainer to=\"/profile\">\r\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <NavDropdown.Item onClick={logoutHandler}>\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to=\"/login\">\r\n                  <Nav.Link>\r\n                    <i className=\"fas fa-user\"></i>Sign In\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row>\r\n          <Col className='text-center py-3'>Copyright &copy; Sonasu</Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Spinner\r\n      animation=\"border\"\r\n      role=\"status\"\r\n      style={{\r\n        width: \"100px\",\r\n        height: \"100px\",\r\n        margin: \"auto\",\r\n        display: \"block\",\r\n      }}\r\n    ><span className='sr-only'>Loading...</span></Spinner>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nconst Message = ({ variant, children }) => {\r\n  return <Alert variant={variant}>{children}</Alert>;\r\n};\r\n\r\nMessage.defaultProps = {\r\n  variant: \"info\",\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport { Row, Col, Container } from \"react-bootstrap\";\r\n\r\nconst FormContainer = ({children}) => {\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FormContainer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport { login } from \"../actions/userActions\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport FormContainer from \"../components/FormContainer\";\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { loading, error, userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push('/home');\r\n    }\r\n  }, [history, userInfo]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login(email, password));\r\n  };\r\n\r\n  return (\r\n    <FormContainer >\r\n      <h1 className='mt-5'>Sign In</h1>\r\n\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n\r\n      <Form onSubmit={submitHandler} classnName=\"text-center\">\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter Address\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Enter Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <br/>\r\n\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Sign In\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className=\"py-3\">\r\n        <Col>\r\n          New Customer?\r\n          <Link to={'/register'}>\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","export const CENTRE_LIST_REQUEST = \"CENTRE_LIST_REQUEST\";\r\nexport const CENTRE_LIST_SUCCESS = \"CENTRE_LIST_SUCCESS\";\r\nexport const CENTRE_LIST_FAIL = \"CENTRE_LIST_FAIL\";\r\n\r\nexport const CENTRE_DETAILS_REQUEST = \"CENTRE_DETAILS_REQUEST\";\r\nexport const CENTRE_DETAILS_SUCCESS = \"CENTRE_DETAILS_SUCCESS\";\r\nexport const CENTRE_DETAILS_FAIL = \"CENTRE_DETAILS_FAIL\";\r\n\r\nexport const CENTRE_REGISTER_REQUEST = \"CENTRE_REGISTER_REQUEST\";\r\nexport const CENTRE_REGISTER_SUCCESS = \"CENTRE_REGISTER_SUCCESS\";\r\nexport const CENTRE_REGISTER_FAIL = \"CENTRE_REGISTER_FAIL\";\r\n\r\nexport const CENTRE_DELETE_REQUEST = \"CENTRE_DELETE_REQUEST\";\r\nexport const CENTRE_DELETE_SUCCESS = \"CENTRE_DELETE_SUCCESS\";\r\nexport const CENTRE_DELETE_FAIL = \"CENTRE_DELETE_FAIL\";\r\n\r\nexport const CENTRE_UPDATE_REQUEST = \"CENTRE_UPDATE_REQUEST\";\r\nexport const CENTRE_UPDATE_SUCCESS = \"CENTRE_UPDATE_SUCCESS\";\r\nexport const CENTRE_UPDATE_FAIL = \"CENTRE_UPDATE_FAIL\";\r\nexport const CENTRE_UPDATE_RESET = \"CENTRE_UPDATE_RESET\";\r\n","import {\r\n  CENTRE_LIST_REQUEST,\r\n  CENTRE_LIST_SUCCESS,\r\n  CENTRE_LIST_FAIL,\r\n  CENTRE_DETAILS_REQUEST,\r\n  CENTRE_DETAILS_SUCCESS,\r\n  CENTRE_DETAILS_FAIL,\r\n  CENTRE_REGISTER_REQUEST,\r\n  CENTRE_REGISTER_SUCCESS,\r\n  CENTRE_REGISTER_FAIL,\r\n  CENTRE_DELETE_REQUEST,\r\n  CENTRE_DELETE_SUCCESS,\r\n  CENTRE_DELETE_FAIL,\r\n  CENTRE_UPDATE_REQUEST,\r\n  CENTRE_UPDATE_SUCCESS,\r\n  CENTRE_UPDATE_FAIL,\r\n} from \"../constants/centreConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport const listCentres = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: CENTRE_LIST_REQUEST });\r\n\r\n    const { data } = await axios.get(\"/api/admin/centres\");\r\n\r\n    dispatch({\r\n      type: CENTRE_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CENTRE_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getCertreDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: CENTRE_DETAILS_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/admin/centres/${id}`);\r\n\r\n    dispatch({\r\n      type: CENTRE_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CENTRE_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const centreRegister = (centreName) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: CENTRE_REGISTER_REQUEST,\r\n    });\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      \"/api/admin/centres/register\",\r\n      { centreName },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: CENTRE_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: CENTRE_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CENTRE_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteCentre = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: CENTRE_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorizatio: `Bearer ${userInfo.token},`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/admin/centres/${id}`, config);\r\n\r\n    dispatch({\r\n      type: CENTRE_DELETE_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CENTRE_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateCentre = (centre) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: CENTRE_UPDATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorizatio: `Bearer ${userInfo.token},`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/admin/centres/${centre._id}`,\r\n      centre,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: CENTRE_UPDATE_SUCCESS,\r\n    });\r\n\r\n    dispatch({\r\n      type: CENTRE_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CENTRE_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  listCentres,\r\n  getCertreDetails,\r\n  centreRegister,\r\n  deleteCentre,\r\n} from \"../actions/centreActions\";\r\nimport { Row, Col, Button, Form, Table } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\n\r\nconst HomeScreen = () => {\r\n  const [centreName, setCentreName] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const centreList = useSelector((state) => state.centreList);\r\n  const { loading, error, centres } = centreList;\r\n\r\n  const centreDelete = useSelector((state) => state.centreDelete);\r\n  const { success: successDelete } = centreDelete;\r\n\r\n  const submitHandler = (e) => {\r\n    if (centreName === \"\") {\r\n      setMessage(\"Centre Name Is Empty\");\r\n    } else {\r\n      dispatch(centreRegister(centreName));\r\n    }\r\n  };\r\n\r\n  const updateHandler = (id) => {\r\n    dispatch(getCertreDetails(id));\r\n  };\r\n\r\n  const deleteHandler = (id) => {\r\n    dispatch(deleteCentre(id));\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(listCentres());\r\n  }, [dispatch, successDelete]);\r\n  return (\r\n    <Row>\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      {message && <Message variant=\"danger\">{message}</Message>}\r\n      <Col md={6}>\r\n        <h2>Create Centers</h2>\r\n\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Centre Name</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Enter Centre Name\"\r\n              value={centreName}\r\n              onChange={(e) => setCentreName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button type=\"submit\" variant=\"primary\" className=\"mt-3\">\r\n            Save Centre\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n\r\n      <Col md={6}>\r\n        <h2>Centres</h2>\r\n\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <h2>{error}</h2>\r\n        ) : (\r\n          <Table strriped=\"true\" bordered hover responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>ACTION</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {centres.map((centre) => (\r\n                <tr key={centre._id}>\r\n                  <td>{centre._id}</td>\r\n                  <td>{centre.name}</td>\r\n                  <td>\r\n                    <LinkContainer to={`centre/${centre._id}/edit`}>\r\n                      <Button\r\n                        variant=\"success\"\r\n                        className=\"btn-sm\"\r\n                        onClick={(e) => updateHandler(centre._id)}\r\n                      >\r\n                        Update\r\n                      </Button>\r\n                    </LinkContainer>\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      className=\"btn-sm\"\r\n                      onClick={(e) => deleteHandler(centre._id)}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { getCertreDetails, updateCentre } from \"../actions/centreActions\";\r\nimport { CENTRE_UPDATE_RESET } from \"../constants/centreConstants\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport FormContainer from \"../components/FormContainer\";\r\n\r\nconst CentreEditScreen = ({ match, history }) => {\r\n  const centreId = match.params.id;\r\n\r\n  const [id, setId] = useState(\"\");\r\n  const [centreName, setCentreName] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const Details = useSelector((state) => state.centreDetails);\r\n  const { loading, error, centreDetails } = Details;\r\n\r\n  const update = useSelector((state) => state.centreUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = update;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: CENTRE_UPDATE_RESET });\r\n      history.push(\"/home\");\r\n    } else {\r\n      if (!centreDetails.name || centreDetails._id !== centreId) {\r\n        dispatch(getCertreDetails(centreId));\r\n      } else {\r\n        setId(centreDetails._id);\r\n        setCentreName(centreDetails.name);\r\n      }\r\n    }\r\n  }, [dispatch, centreDetails, successUpdate, history, centreId]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateCentre({ _id: id, name: centreName }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link to=\"/home\" className=\"btn bttn-ligth my-3\">\r\n        Go back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit Centre</h1>\r\n\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"name\"\r\n                placeholder=\"Enter Name\"\r\n                value={centreName}\r\n                onChange={(e) => setCentreName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CentreEditScreen;\r\n","export const ITEM_LIST_REQUEST = 'ITEM_LIST_REQUEST'\r\nexport const ITEM_LIST_SUCCESS = 'ITEM_LIST_SUCCESS'\r\nexport const ITEM_LIST_FAIL = 'ITEM_LIST_FAIL'\r\n\r\nexport const ITEM_DETAILS_REQUEST = \"ITEM_DETAILS_REQUEST\";\r\nexport const ITEM_DETAILS_SUCCESS = \"ITEM_DETAILS_SUCCESS\";\r\nexport const ITEM_DETAILS_FAIL = \"ITEM_DETAILS_FAIL\";\r\n\r\nexport const ITEM_REGISTER_REQUEST = \"ITEM_REGISTER_REQUEST\";\r\nexport const ITEM_REGISTER_SUCCESS = \"ITEM_REGISTER_SUCCESS\";\r\nexport const ITEM_REGISTER_FAIL = \"ITEM_REGISTER_FAIL\";\r\n\r\nexport const ITEM_DELETE_REQUEST = \"ITEM_DELETE_REQUEST\";\r\nexport const ITEM_DELETE_SUCCESS = \"ITEM_DELETE_SUCCESS\";\r\nexport const ITEM_DELETE_FAIL = \"ITEM_DELETE_FAIL\";\r\n\r\nexport const ITEM_UPDATE_REQUEST = \"ITEM_UPDATE_REQUEST\";\r\nexport const ITEM_UPDATE_SUCCESS = \"ITEM_UPDATE_SUCCESS\";\r\nexport const ITEM_UPDATE_FAIL = \"ITEM_UPDATE_FAIL\";\r\nexport const ITEM_UPDATE_RESET = \"ITEM_UPDATE_RESET\";\r\n","import {\r\n  ITEM_LIST_REQUEST,\r\n  ITEM_LIST_SUCCESS,\r\n  ITEM_LIST_FAIL,\r\n  ITEM_DETAILS_REQUEST,\r\n  ITEM_DETAILS_SUCCESS,\r\n  ITEM_DETAILS_FAIL,\r\n  ITEM_REGISTER_REQUEST,\r\n  ITEM_REGISTER_SUCCESS,\r\n  ITEM_REGISTER_FAIL,\r\n  ITEM_DELETE_REQUEST,\r\n  ITEM_DELETE_SUCCESS,\r\n  ITEM_DELETE_FAIL,\r\n  ITEM_UPDATE_REQUEST,\r\n  ITEM_UPDATE_SUCCESS,\r\n  ITEM_UPDATE_FAIL,\r\n} from \"../constants/itemConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport const listItems = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ITEM_LIST_REQUEST });\r\n\r\n    const { data } = await axios.get(\"/api/admin/items\");\r\n\r\n    dispatch({\r\n      type: ITEM_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ITEM_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getItemDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ITEM_DETAILS_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/admin/items/${id}`);\r\n\r\n    dispatch({\r\n      type: ITEM_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ITEM_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const itemRegister = (itemName) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: ITEM_REGISTER_REQUEST,\r\n    });\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      \"/api/admin/items/register\",\r\n      { itemName },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ITEM_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: ITEM_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ITEM_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteItem = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ITEM_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorizatio: `Bearer ${userInfo.token},`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/admin/items/${id}`, config);\r\n\r\n    dispatch({\r\n      type: ITEM_DELETE_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ITEM_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateItem = (item) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ITEM_UPDATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorizatio: `Bearer ${userInfo.token},`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/admin/items/${item._id}`,\r\n      item,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ITEM_UPDATE_SUCCESS,\r\n    });\r\n\r\n    dispatch({\r\n      type: ITEM_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ITEM_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  listItems,\r\n  getItemDetails,\r\n  itemRegister,\r\n  deleteItem,\r\n} from \"../actions/itemActions\";\r\nimport { Row, Col, Button, Form, Table } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\n\r\nconst ItemsScreen = () => {\r\n  const [itemName, setItemName] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const itemList = useSelector((state) => state.itemList);\r\n  const { loading, error, items } = itemList;\r\n\r\n  const itemDelete = useSelector((state) => state.itemDelete);\r\n  const { success: successDelete } = itemDelete;\r\n\r\n  const submitHandler = (e) => {\r\n    if (itemName === \"\") {\r\n      setMessage(\"Item Name Is Empty\");\r\n    } else {\r\n      dispatch(itemRegister(itemName));\r\n    }\r\n  };\r\n\r\n  const updateHandler = (id) => {\r\n    dispatch(getItemDetails(id));\r\n  };\r\n\r\n  const deleteHandler = (id) => {\r\n    dispatch(deleteItem(id));\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(listItems());\r\n  }, [dispatch, successDelete]);\r\n  return (\r\n    <Row>\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      {message && <Message variant=\"danger\">{message}</Message>}\r\n      <Col md={6}>\r\n        <h2>Create Item</h2>\r\n\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Item Name</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Enter Item Name\"\r\n              value={itemName}\r\n              onChange={(e) => setItemName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button type=\"submit\" variant=\"primary\" className=\"mt-3\">\r\n            Save Item\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n\r\n      <Col md={6}>\r\n        <h2>Items</h2>\r\n\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <h2>{error}</h2>\r\n        ) : (\r\n          <Table strriped=\"true\" bordered hover responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>ACTION</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {items.map((item) => (\r\n                <tr key={item._id}>\r\n                  <td>{item._id}</td>\r\n                  <td>{item.name}</td>\r\n                  <td>\r\n                    <LinkContainer to={`item/${item._id}/edit`}>\r\n                      <Button\r\n                        variant=\"success\"\r\n                        className=\"btn-sm\"\r\n                        onClick={(e) => updateHandler(item._id)}\r\n                      >\r\n                        Update\r\n                      </Button>\r\n                    </LinkContainer>\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      className=\"btn-sm\"\r\n                      onClick={(e) => deleteHandler(item._id)}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ItemsScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { getItemDetails, updateItem } from \"../actions/itemActions\";\r\nimport { ITEM_UPDATE_RESET } from \"../constants/itemConstants\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport FormContainer from \"../components/FormContainer\";\r\n\r\nconst ItemEditScreen = ({ match, history }) => {\r\n  const itemId = match.params.id;\r\n\r\n  const [id, setId] = useState(\"\");\r\n  const [itemName, setItemName] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const Details = useSelector((state) => state.itemDetails);\r\n  const { loading, error, itemDetails } = Details;\r\n\r\n  const update = useSelector((state) => state.itemUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = update;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: ITEM_UPDATE_RESET });\r\n      history.push(\"/items\");\r\n    } else {\r\n      if (!itemDetails.name || itemDetails._id !== itemId) {\r\n        dispatch(getItemDetails(itemId));\r\n      } else {\r\n        setId(itemDetails._id);\r\n        setItemName(itemDetails.name);\r\n      }\r\n    }\r\n  }, [dispatch, itemDetails, successUpdate, itemId, history]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateItem({ _id: id, name: itemName }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link to=\"/item\" className=\"btn bttn-ligth my-3\">\r\n        Go back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit Item</h1>\r\n\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Item Name</Form.Label>\r\n              <Form.Control\r\n                type=\"name\"\r\n                placeholder=\"Enter Name\"\r\n                value={itemName}\r\n                onChange={(e) => setItemName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Update Item\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ItemEditScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listCentres } from \"../actions/centreActions\";\r\nimport {\r\n  register,\r\n  getUserDetails,\r\n  deleteUser,\r\n  listUsers,\r\n} from \"../actions/userActions\";\r\nimport { Row, Col, Button, Form, Table } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\n\r\nconst UserScreen = ({ history }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [centreName, setCentreName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const centreList = useSelector((state) => state.centreList);\r\n  const { centres } = centreList;\r\n\r\n  const userList = useSelector((state) => state.userList);\r\n  const { loading, error, users } = userList;\r\n\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const { loading: regLoading, error: regError } = userRegister;\r\n\r\n  const userDelete = useSelector((state) => state.userDelete);\r\n  const { success: successDelete } = userDelete;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Password do not Match\");\r\n    } else if (name === \"\") {\r\n      setMessage(\"Name Is Empty\");\r\n    } else if (centreName === \"\") {\r\n      setMessage(\"Centre Is Empty\");\r\n    } else if (email === \"\") {\r\n      setMessage(\"Email Is Empty\");\r\n    } else {\r\n      // console.log(centreName);\r\n\r\n      dispatch(register(name, email, centreName, password));\r\n    }\r\n  };\r\n\r\n  const updateHandler = (id) => {\r\n    dispatch(getUserDetails(id));\r\n  };\r\n\r\n  const deleteHandler = (id) => {\r\n    dispatch(deleteUser(id));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!userInfo.isAdmin) {\r\n      history.push(\"/\");\r\n    } else {\r\n      dispatch(listUsers());\r\n      dispatch(listCentres());\r\n    }\r\n  }, [history, userInfo, dispatch, successDelete]);\r\n  return (\r\n    <Row>\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      {message && <Message variant=\"danger\">{message}</Message>}\r\n      <Col md={6}>\r\n        <h2>New User</h2>\r\n\r\n        {regError && <Message variant=\"danger\">{regError}</Message>}\r\n\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Enter Name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter Address\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"centre\">\r\n            <Form.Label>Centre</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={centreName}\r\n              onChange={(e) => setCentreName(e.target.value)}\r\n            >\r\n              {centres.map((centre) => (\r\n                <option value={centre._id}>{centre.name}</option>\r\n              ))}\r\n            </Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"ConfirmPassword\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Re-Enter Password\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          {regLoading && <Loader />}\r\n\r\n          <Button type=\"submit\" variant=\"primary\">\r\n            Register\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n\r\n      <Col md={6}>\r\n        <h2>Users</h2>\r\n\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <h2>{error}</h2>\r\n        ) : (\r\n          <Table strriped=\"true\" bordered hover responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>NAME</th>\r\n                <th>EMAIL</th>\r\n                <th>CENTRE</th>\r\n                <th>ACTION</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {users && users.map(( user ) => (\r\n                <tr key={user._id}>\r\n                  <td>{user.name}</td>\r\n                  <td>{user.email}</td>\r\n                  <td>{user.centre.name}</td>\r\n                  <td>\r\n                    <LinkContainer to={`user/${user._id}/edit`}>\r\n                      <Button\r\n                        variant=\"success\"\r\n                        className=\"btn-sm\"\r\n                        onClick={(e) => updateHandler(user._id)}\r\n                      >\r\n                        Update\r\n                      </Button>\r\n                    </LinkContainer>\r\n\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      className=\"btn-sm\"\r\n                      onClick={(e) => deleteHandler(user._id)}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default UserScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\r\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\r\n\r\nimport { listCentres } from \"../actions/centreActions\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport FormContainer from \"../components/FormContainer\";\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n  const userId = match.params.id;\r\n\r\n  const [id, setId] = useState(\"\");\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [centreName, setCentreName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const centreList = useSelector((state) => state.centreList);\r\n  const { centres } = centreList;\r\n\r\n  const Details = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = Details;\r\n\r\n  const update = useSelector((state) => state.userUpdateProfile);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = update;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo.isAdmin) {\r\n      history.push(\"/\");\r\n    } else if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET });\r\n      history.push(\"/users\");\r\n    } else {\r\n      dispatch(listCentres());\r\n      if (!user.name || user._id !== userId) {\r\n        dispatch(getUserDetails(userId));\r\n      } else {\r\n        setId(user._id);\r\n        setUserName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n  }, [userInfo, dispatch, user, successUpdate, userId, history]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password === \"\") {\r\n      if (userName === \"\") {\r\n        setMessage(\"Name Is Empty\");\r\n      } else if (email === \"\") {\r\n        setMessage(\"Email Is Empty\");\r\n      } else if (centreName === \"\") {\r\n        setMessage(\"Centre Is Empty\");\r\n      } else {\r\n        dispatch(updateUserProfile({ _id: id, name: userName, email: email, centre: centreName}));\r\n      }\r\n    } else {\r\n      if (password !== confirmPassword) {\r\n        setMessage(\"Password do not Match\");\r\n      } else if (userName === \"\") {\r\n        setMessage(\"Name Is Empty\");\r\n      } else if (email === \"\") {\r\n        setMessage(\"Email Is Empty\");\r\n      } else {\r\n        dispatch(\r\n          updateUserProfile({\r\n            _id: id,\r\n            name: userName,\r\n            email: email,\r\n            centre: centreName,\r\n            password: password,\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link to=\"/users\" className=\"btn bttn-ligth my-3\">\r\n        Go back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit Users</h1>\r\n\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>User Name</Form.Label>\r\n              <Form.Control\r\n                type=\"name\"\r\n                placeholder=\"Enter Email\"\r\n                value={userName}\r\n                onChange={(e) => setUserName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter Name\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"centre\">\r\n            <Form.Label>Centre</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={centreName}\r\n              onChange={(e) => setCentreName(e.target.value)}\r\n            >\r\n              {centres.map((centre) => (\r\n                <option value={centre._id}>{centre.name}</option>\r\n              ))}\r\n            </Form.Control>\r\n          </Form.Group>\r\n            <Form.Group controlId=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Enter Password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"ConfirmPassword\">\r\n              <Form.Label>Confirm Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Rr-Enter Password\"\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Update User\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserEditScreen;\r\n","export const PRICE_LIST_REQUEST = \"PRICE_LIST_REQUEST\";\r\nexport const PRICE_LIST_SUCCESS = \"PRICE_LIST_SUCCESS\";\r\nexport const PRICE_LIST_FAIL = \"PRICE_LIST_FAIL\";\r\n\r\nexport const PRICE_DETAILS_REQUEST = \"PRICE_DETAILS_REQUEST\";\r\nexport const PRICE_DETAILS_SUCCESS = \"PRICE_DETAILS_SUCCESS\";\r\nexport const PRICE_DETAILS_FAIL = \"PRICE_DETAILS_FAIL\";\r\n\r\nexport const PRICE_REGISTER_REQUEST = \"PRICE_REGISTER_REQUEST\";\r\nexport const PRICE_REGISTER_SUCCESS = \"PRICE_REGISTER_SUCCESS\";\r\nexport const PRICE_REGISTER_FAIL = \"PRICE_REGISTER_FAIL\";\r\n\r\nexport const PRICE_DELETE_REQUEST = \"PRICE_DELETE_REQUEST\";\r\nexport const PRICE_DELETE_SUCCESS = \"PRICE_DELETE_SUCCESS\";\r\nexport const PRICE_DELETE_FAIL = \"PRICE_DELETE_FAIL\";\r\n\r\nexport const PRICE_UPDATE_REQUEST = \"PRICE_UPDATE_REQUEST\";\r\nexport const PRICE_UPDATE_SUCCESS = \"PRICE_UPDATE_SUCCESS\";\r\nexport const PRICE_UPDATE_FAIL = \"PRICE_UPDATE_FAIL\";\r\nexport const PRICE_UPDATE_RESET = \"PRICE_UPDATE_RESET\";","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listCentres } from \"../actions/centreActions\";\r\nimport { listItems } from \"../actions/itemActions\";\r\nimport {\r\n  listPrice,\r\n  getPriceDetails,\r\n  priceRegister,\r\n  deletePrice,\r\n} from \"../actions/priceAction\";\r\nimport { Row, Col, Button, Form, Table } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst PriceScreen = () => {\r\n  const [centreName, setCentreName] = useState(\"\");\r\n  const [itemName, setItemName] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [date, setDate] = useState(new Date());\r\n  const [message, setMessage] = useState(null);\r\n\r\n  var year = date.getUTCFullYear();\r\n  var month = date.getUTCMonth();\r\n  var day = date.getUTCDate();\r\n  var dateTime = year + \"-\" + (month + 1) + \"-\" + day + \"T00:00:00.000+00:00\";\r\n  const dispatch = useDispatch();\r\n\r\n  const centreList = useSelector((state) => state.centreList);\r\n  const { centres } = centreList;\r\n\r\n  const itemList = useSelector((state) => state.itemList);\r\n  const { items } = itemList;\r\n\r\n  const priceList = useSelector((state) => state.priceList);\r\n  const { loading, error, prices } = priceList;\r\n\r\n  const itemDelete = useSelector((state) => state.itemDelete);\r\n  const { success: successDelete } = itemDelete;\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (centreName === \"\") {\r\n      setMessage(\"Centre Is Empty\");\r\n    } else if (itemName === \"\") {\r\n      setMessage(\"Item Is Empty\");\r\n    } else if (price === \"\") {\r\n      setMessage(\"Price Is Empty\");\r\n    } else {\r\n      dispatch(priceRegister(itemName, centreName, price, dateTime));\r\n    }\r\n  };\r\n\r\n  const updateHandler = (id) => {\r\n    // dispatch(getItemDetails(id));\r\n  };\r\n\r\n  const deleteHandler = (id) => {\r\n    // dispatch(deleteItem(id));\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(listItems());\r\n    dispatch(listCentres());\r\n    dispatch(listPrice());\r\n  }, [dispatch, successDelete]);\r\n  return (\r\n    <Row>\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      {message && <Message variant=\"danger\">{message}</Message>}\r\n      <Col md={6}>\r\n        <h2>Enter Price</h2>\r\n\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"centre\">\r\n            <Form.Label>Select Item</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={itemName}\r\n              onChange={(e) => setItemName(e.target.value)}\r\n            >\r\n              {items.map((item) => (\r\n                <option value={item._id}>{item.name}</option>\r\n              ))}\r\n            </Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"centre\">\r\n            <Form.Label>Select Centre</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={centreName}\r\n              onChange={(e) => setCentreName(e.target.value)}\r\n            >\r\n              {centres.map((centre) => (\r\n                <option value={centre._id}>{centre.name}</option>\r\n              ))}\r\n            </Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Price</Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              placeholder=\"Enter Price\"\r\n              value={price}\r\n              onChange={(e) => setPrice(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button type=\"submit\" variant=\"primary\" className=\"mt-3\">\r\n            Save Centre\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n\r\n      <Col md={6}>\r\n        <h2>Price List</h2>\r\n\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <h2>{error}</h2>\r\n        ) : (\r\n          <Table strriped=\"true\" bordered hover responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n               \r\n                <th>CENTRE</th>\r\n                <th>NAME</th>\r\n                <th>PRICE</th>\r\n                <th>ACTION</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {prices && prices.map((price) => (\r\n                <tr key={price._id}>  \r\n                  <td>{price.centre.name}</td>\r\n                  <td>{price.name.name}</td>\r\n                  <td>{price.price}</td>\r\n                  <td>\r\n                    <LinkContainer to={`price/${price._id}/edit`}>\r\n                      <Button\r\n                        variant=\"success\"\r\n                        className=\"btn-sm\"\r\n                        onClick={(e) => updateHandler(price._id)}\r\n                      >\r\n                        Update\r\n                      </Button>\r\n                    </LinkContainer>\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      className=\"btn-sm\"\r\n                      onClick={(e) => deleteHandler(price._id)}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default PriceScreen;\r\n","import {\r\n  PRICE_LIST_REQUEST,\r\n  PRICE_LIST_SUCCESS,\r\n  PRICE_LIST_FAIL,\r\n  PRICE_DETAILS_REQUEST,\r\n  PRICE_DETAILS_SUCCESS,\r\n  PRICE_DETAILS_FAIL,\r\n  PRICE_REGISTER_REQUEST,\r\n  PRICE_REGISTER_SUCCESS,\r\n  PRICE_REGISTER_FAIL,\r\n  PRICE_DELETE_REQUEST,\r\n  PRICE_DELETE_SUCCESS,\r\n  PRICE_DELETE_FAIL,\r\n  PRICE_UPDATE_REQUEST,\r\n  PRICE_UPDATE_SUCCESS,\r\n  PRICE_UPDATE_FAIL,\r\n} from \"../constants/priceConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport const listPrice = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRICE_LIST_REQUEST });\r\n\r\n    const { data } = await axios.get(\"/api/admin/price\");\r\n\r\n    dispatch({\r\n      type: PRICE_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRICE_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getPriceDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRICE_DETAILS_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/admin/price/${id}`);\r\n\r\n    dispatch({\r\n      type: PRICE_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRICE_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const priceRegister =\r\n  (item, centre, price, dateTime) => async (dispatch,getState) => {\r\n    try {\r\n      dispatch({\r\n        type: PRICE_REGISTER_REQUEST,\r\n      });\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n      const { data } = await axios.post(\r\n        \"/api/admin/price/register\",\r\n        { item, centre, price, dateTime },\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: PRICE_REGISTER_SUCCESS,\r\n        payload: data,\r\n      });\r\n\r\n      dispatch({\r\n        type: PRICE_DETAILS_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PRICE_REGISTER_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const deletePrice = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRICE_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorizatio: `Bearer ${userInfo.token},`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/admin/price/${id}`, config);\r\n\r\n    dispatch({\r\n      type: PRICE_DELETE_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRICE_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updatePrice = (price) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRICE_UPDATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorizatio: `Bearer ${userInfo.token},`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/admin/centres/${price._id}`,\r\n      price,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: PRICE_UPDATE_SUCCESS,\r\n    });\r\n\r\n    dispatch({\r\n      type: PRICE_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRICE_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React from 'react'\r\n\r\nconst AboutUsScreen = () => {\r\n    return (\r\n        <div>\r\n            AboutUsScreen\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AboutUsScreen\r\n","import React from 'react'\r\n\r\nconst ProductScreen = () => {\r\n    return (\r\n        <div>\r\n            ProductScreen\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import React from 'react'\r\n\r\nconst AdminScreen = () => {\r\n    return (\r\n        <div>\r\n            AdminScreen\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminScreen\r\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport Header from \"./components/Header\";\r\nimport Footer from \"./components/Footer\";\r\n\r\nimport LoginScreen from \"./screens/LoginScreen\";\r\nimport HomeScreen from \"./screens/HomeScreen\";\r\nimport CentreEditScreen from \"./screens/CentreEditScreen\";\r\nimport ItemsScreen from \"./screens/ItemsScreen\";\r\nimport ItemEditScreen from \"./screens/ItemEditScreen\";\r\nimport UserScreen from \"./screens/UserScreen\";\r\nimport UserEditScreen from \"./screens/UserEditScreen\";\r\nimport PriceScreen from \"./screens/PriceScreen\";\r\n\r\n\r\nimport AboutUsScreen from \"./screens/AboutUsScreen\";\r\nimport ProductScreen from \"./screens/ProductScreen\";\r\nimport AdminScreen from \"./screens/AdminScreen\";\r\n\r\nimport \"./index.css\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nconst App = () => {\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  return (\r\n    <>\r\n      {userInfo ? (\r\n        <>\r\n          <Router>\r\n            <Header />\r\n            <Container>\r\n              <main className=\"py-3\">\r\n                <Switch>\r\n                  <Route exact path=\"/\" component={LoginScreen} />\r\n                  \r\n                  <Route path=\"/about\" component={AboutUsScreen} />\r\n                  <Route path=\"/home\" component={HomeScreen} />\r\n                  <Route path=\"/centre/:id/edit\" component={CentreEditScreen} />\r\n                  <Route path=\"/items\" component={ItemsScreen} />\r\n                  <Route path=\"/item/:id/edit\" component={ItemEditScreen} />\r\n                  <Route path=\"/users\" component={UserScreen} />\r\n                  <Route path=\"/user/:id/edit\" component={UserEditScreen} />\r\n                  <Route path=\"/price\" component={PriceScreen} />\r\n\r\n                  \r\n                  <Route path=\"/admin\" component={AdminScreen} />\r\n                  <Route path=\"/product/:id\" component={ProductScreen} />\r\n                </Switch>\r\n              </main>\r\n            </Container>\r\n            <Footer />\r\n          </Router>\r\n          {/* {userInfo.isAdmin ? (\r\n            \r\n          //) : (\r\n          // <div>Not a Admin</div>\r\n          //)\r\n        } */}\r\n        </>\r\n      ) : (\r\n        <Router>\r\n          <LoginScreen />\r\n        </Router>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n  centreListReducer,\r\n  centreDetailsReducer,\r\n  centreDeleteReducer,\r\n  centreUpdateReducer,\r\n} from \"./reducer/centerReducers\";\r\nimport {\r\n  itemsListReducer,\r\n  itemDetailsReducer,\r\n  itemDeleteReducer,\r\n  itemUpdateReducer,\r\n} from \"./reducer/itemReducers\";\r\nimport {\r\n  userLoginReducer,\r\n  userListReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userDeleteReducer,\r\n  userUpdateProfileReducer,\r\n} from \"./reducer/userReducers\";\r\nimport {\r\n  priceListReducer,\r\n  priceRegisterReducer,\r\n  priceDetailsReducer,\r\n  priceDeleteReducer,\r\n  priceUpdateReducer,\r\n} from \"./reducer/priceReducers\";\r\n\r\nconst reducer = combineReducers({\r\n  //   centre\r\n  centreList: centreListReducer,\r\n  centreDetails: centreDetailsReducer,\r\n  centreDelete: centreDeleteReducer,\r\n  centreUpdate: centreUpdateReducer,\r\n  //   item\r\n  itemList: itemsListReducer,\r\n  itemDetails: itemDetailsReducer,\r\n  itemDelete: itemDeleteReducer,\r\n  itemUpdate: itemUpdateReducer,\r\n  //   users\r\n  userLogin: userLoginReducer,\r\n  userList: userListReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userDelete: userDeleteReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  //   price\r\n  priceList: priceListReducer,\r\n  priceRegister: priceRegisterReducer,\r\n  priceDelete: priceDeleteReducer,\r\n  priceUpdate: priceUpdateReducer,\r\n});\r\n\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\n  const centresFromStorage = localStorage.getItem(\"centres\")\r\n  ? JSON.parse(localStorage.getItem(\"centres\"))\r\n  : null;\r\n\r\nconst initialState = {\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n  centres: { centres: centresFromStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n  CENTRE_LIST_REQUEST,\r\n  CENTRE_LIST_SUCCESS,\r\n  CENTRE_LIST_FAIL,\r\n  CENTRE_DETAILS_REQUEST,\r\n  CENTRE_DETAILS_SUCCESS,\r\n  CENTRE_DETAILS_FAIL,\r\n  CENTRE_REGISTER_REQUEST,\r\n  CENTRE_REGISTER_SUCCESS,\r\n  CENTRE_REGISTER_FAIL,\r\n  CENTRE_DELETE_REQUEST,\r\n  CENTRE_DELETE_SUCCESS,\r\n  CENTRE_DELETE_FAIL,\r\n  CENTRE_UPDATE_REQUEST,\r\n  CENTRE_UPDATE_SUCCESS,\r\n  CENTRE_UPDATE_FAIL,\r\n  CENTRE_UPDATE_RESET,\r\n} from \"../constants/centreConstants\";\r\n\r\nexport const centreListReducer = (state = { centres: [] }, action) => {\r\n  switch (action.type) {\r\n    case CENTRE_LIST_REQUEST:\r\n      return { loading: true, centres: [] };\r\n    case CENTRE_LIST_SUCCESS:\r\n      return { loading: false, centres: action.payload };\r\n    case CENTRE_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const centreDetailsReducer = (state = { centreDetails: [] }, action) => {\r\n  switch (action.type) {\r\n    case CENTRE_DETAILS_REQUEST:\r\n      return { loading: true, ...state };\r\n    case CENTRE_DETAILS_SUCCESS:\r\n      return { loading: false, centreDetails: action.payload };\r\n    case CENTRE_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const centreRegisterReducer = (state = { centres: [] }, action) => {\r\n  switch (action.type) {\r\n    case CENTRE_REGISTER_REQUEST:\r\n      return { loading: true, centres: [] };\r\n    case CENTRE_REGISTER_SUCCESS:\r\n      return { loading: false, centreInfo: action.payload };\r\n    case CENTRE_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const centreDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case CENTRE_DELETE_REQUEST:\r\n      return { loading: true, centres: [] };\r\n    case CENTRE_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case CENTRE_DELETE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const centreUpdateReducer = (state = { centre: {} }, action) => {\r\n  switch (action.type) {\r\n    case CENTRE_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case CENTRE_UPDATE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case CENTRE_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case CENTRE_UPDATE_RESET:\r\n      return { centre: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ITEM_LIST_REQUEST,\r\n  ITEM_LIST_SUCCESS,\r\n  ITEM_LIST_FAIL,\r\n  ITEM_DETAILS_REQUEST,\r\n  ITEM_DETAILS_SUCCESS,\r\n  ITEM_DETAILS_FAIL,\r\n  ITEM_REGISTER_REQUEST,\r\n  ITEM_REGISTER_SUCCESS,\r\n  ITEM_REGISTER_FAIL,\r\n  ITEM_DELETE_REQUEST,\r\n  ITEM_DELETE_SUCCESS,\r\n  ITEM_DELETE_FAIL,\r\n  ITEM_UPDATE_REQUEST,\r\n  ITEM_UPDATE_SUCCESS,\r\n  ITEM_UPDATE_FAIL,\r\n  ITEM_UPDATE_RESET,\r\n} from \"../constants/itemConstants\";\r\n\r\nexport const itemsListReducer = (state = { items: [] }, action) => {\r\n  switch (action.type) {\r\n    case ITEM_LIST_REQUEST:\r\n      return { loading: true, items: [] };\r\n    case ITEM_LIST_SUCCESS:\r\n      return { loading: false, items: action.payload };\r\n    case ITEM_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const itemDetailsReducer = (state = { itemDetails: [] }, action) => {\r\n  switch (action.type) {\r\n    case ITEM_DETAILS_REQUEST:\r\n      return { loading: true, ...state };\r\n    case ITEM_DETAILS_SUCCESS:\r\n      return { loading: false, itemDetails: action.payload };\r\n    case ITEM_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const itemRegisterReducer = (state = { items: [] }, action) => {\r\n  switch (action.type) {\r\n    case ITEM_REGISTER_REQUEST:\r\n      return { loading: true, items: [] };\r\n    case ITEM_REGISTER_SUCCESS:\r\n      return { loading: false, itemInfo: action.payload };\r\n    case ITEM_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const itemDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ITEM_DELETE_REQUEST:\r\n      return { loading: true, items: [] };\r\n    case ITEM_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case ITEM_DELETE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const itemUpdateReducer = (state = { items: {} }, action) => {\r\n  switch (action.type) {\r\n    case ITEM_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case ITEM_UPDATE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case ITEM_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case ITEM_UPDATE_RESET:\r\n      return { item: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGOUT,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_REQUEST,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_RESET\r\n} from \"../constants/userConstants\";\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true };\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_LOGOUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n  switch (action.type) {\r\n    case USER_LIST_REQUEST:\r\n      return { loading: true, users: [] };\r\n    case USER_LIST_SUCCESS:\r\n      return { loading: false, users: action.payload };\r\n    case USER_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true };\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return { ...state, loading: true };\r\n    case USER_DETAILS_SUCCESS:\r\n      return { loading: false, user: action.payload };\r\n    case USER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_DELETE_REQUEST:\r\n      return { loading: true, user: [] };\r\n    case USER_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case USER_DELETE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case USER_UPDATE_SUCCESS:\r\n      return { loading: false, success: true, user: action.payload };\r\n    case USER_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_UPDATE_RESET:\r\n      return { user: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n    PRICE_LIST_REQUEST,\r\n    PRICE_LIST_SUCCESS,\r\n    PRICE_LIST_FAIL,\r\n    PRICE_DETAILS_REQUEST,\r\n    PRICE_DETAILS_SUCCESS,\r\n    PRICE_DETAILS_FAIL,\r\n    PRICE_REGISTER_REQUEST,\r\n    PRICE_REGISTER_SUCCESS,\r\n    PRICE_REGISTER_FAIL,\r\n    PRICE_DELETE_REQUEST,\r\n    PRICE_DELETE_SUCCESS,\r\n    PRICE_DELETE_FAIL,\r\n    PRICE_UPDATE_REQUEST,\r\n    PRICE_UPDATE_SUCCESS,\r\n    PRICE_UPDATE_FAIL,\r\n    PRICE_UPDATE_RESET,\r\n  } from \"../constants/priceConstants\";  \r\n\r\nexport const priceListReducer = (state = { price: [] }, action) => {\r\n    switch (action.type) {\r\n      case PRICE_LIST_REQUEST:\r\n        return { loading: true, prices: [] };\r\n      case PRICE_LIST_SUCCESS:\r\n        return { loading: false, prices: action.payload };\r\n      case PRICE_LIST_FAIL:\r\n        return { loading: false, error: action.payload };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export const priceDetailsReducer = (state = { priceDetails: [] }, action) => {\r\n    switch (action.type) {\r\n      case PRICE_DETAILS_REQUEST:\r\n        return { loading: true, ...state };\r\n      case PRICE_DETAILS_SUCCESS:\r\n        return { loading: false, priceDetails: action.payload };\r\n      case PRICE_DETAILS_FAIL:\r\n        return { loading: false, error: action.payload };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export const priceRegisterReducer = (state = { price: [] }, action) => {\r\n    switch (action.type) {\r\n      case PRICE_REGISTER_REQUEST:\r\n        return { loading: true, price: [] };\r\n      case PRICE_REGISTER_SUCCESS:\r\n        return { loading: false, priceInfo: action.payload };\r\n      case PRICE_REGISTER_FAIL:\r\n        return { loading: false, error: action.payload };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export const priceDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case PRICE_DELETE_REQUEST:\r\n        return { loading: true, price: [] };\r\n      case PRICE_DELETE_SUCCESS:\r\n        return { loading: false, success: true };\r\n      case PRICE_DELETE_FAIL:\r\n        return { loading: false, error: action.payload };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export const priceUpdateReducer = (state = { price: {} }, action) => {\r\n    switch (action.type) {\r\n      case PRICE_UPDATE_REQUEST:\r\n        return { loading: true };\r\n      case PRICE_UPDATE_SUCCESS:\r\n        return { loading: false, success: true };\r\n      case PRICE_UPDATE_FAIL:\r\n        return { loading: false, error: action.payload };\r\n      case PRICE_UPDATE_RESET:\r\n        return { price: {} };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  ","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./bootstrap.min.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}